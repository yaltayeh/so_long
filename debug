==67525== Memcheck, a memory error detector
==67525== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==67525== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==67525== Command: ./so_long maps/map.ber
==67525== 
==67525== Conditional jump or move depends on uninitialised value(s)
==67525==    at 0x10FF1B: update_player (player.c:117)
==67525==    by 0x10F3E5: update_object (object.c:44)
==67525==    by 0x10FA7C: render_sprites (sprites.c:58)
==67525==    by 0x10F3A2: render_object (object.c:29)
==67525==    by 0x10F3B5: render_object (object.c:31)
==67525==    by 0x10EC88: rander (main.c:123)
==67525==    by 0x1143FC: mlx_loop (in /home/yaltayeh/Core/so_long/so_long)
==67525==    by 0x10EA1E: main (main.c:173)
==67525== 
==67525== Invalid write of size 1
==67525==    at 0x111ED9: ft_memset (ft_memset.c:23)
==67525==    by 0x111EA3: ft_bzero (ft_bzero.c:17)
==67525==    by 0x10F793: destroy_schema (schema.c:100)
==67525==    by 0x10EB83: end_program (main.c:26)
==67525==    by 0x10EC24: key_release (main.c:50)
==67525==    by 0x114455: mlx_loop (in /home/yaltayeh/Core/so_long/so_long)
==67525==    by 0x10EA1E: main (main.c:173)
==67525==  Address 0x4c50580 is 17 bytes after a block of size 15 alloc'd
==67525==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==67525==    by 0x11353B: ft_strjoin_gnl_help (get_next_line_utils.c:24)
==67525==    by 0x1136C8: ft_strjoin_gnl (get_next_line_utils.c:55)
==67525==    by 0x11345D: get_next_line (get_next_line.c:44)
==67525==    by 0x110B42: read_map_file (map_parser.c:155)
==67525==    by 0x110B7B: read_map_file (map_parser.c:159)
==67525==    by 0x110B7B: read_map_file (map_parser.c:159)
==67525==    by 0x110B7B: read_map_file (map_parser.c:159)
==67525==    by 0x110B7B: read_map_file (map_parser.c:159)
==67525==    by 0x110C16: map_parser (map_parser.c:178)
==67525==    by 0x1114D0: load_map (map.c:109)
==67525==    by 0x10E8ED: main (main.c:143)
==67525== 
Bye
==67525== 
==67525== HEAP SUMMARY:
==67525==     in use at exit: 73,390 bytes in 56 blocks
==67525==   total heap usage: 244,497 allocs, 244,441 frees, 7,118,201 bytes allocated
==67525== 
==67525== LEAK SUMMARY:
==67525==    definitely lost: 0 bytes in 0 blocks
==67525==    indirectly lost: 0 bytes in 0 blocks
==67525==      possibly lost: 0 bytes in 0 blocks
==67525==    still reachable: 73,390 bytes in 56 blocks
==67525==         suppressed: 0 bytes in 0 blocks
==67525== Rerun with --leak-check=full to see details of leaked memory
==67525== 
==67525== Use --track-origins=yes to see where uninitialised values come from
==67525== For lists of detected and suppressed errors, rerun with: -s
==67525== ERROR SUMMARY: 275 errors from 2 contexts (suppressed: 1 from 1)